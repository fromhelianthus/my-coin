{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\june2\\\\Desktop\\\\workspace\\\\new-coin\\\\src\\\\routes\\\\Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { isDarkAtom } from \"./atoms\";\nimport { useRecoilValue } from \"recoil\";\nimport { darkTheme, lightTheme } from \"../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart({\n  coinId\n}) {\n  _s();\n  const isDark = useRecoilValue(isDarkAtom);\n  const theme = isDark ? darkTheme : lightTheme; // 현재 테마를 선택합니다.\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        name: \"Price\",\n        data: Array.isArray(data) ? data.map(price => ({\n          x: new Date(price.time_open * 1000),\n          y: [parseFloat(price.open), parseFloat(price.high), parseFloat(price.low), parseFloat(price.close)]\n        })) : []\n      }],\n      options: {\n        theme: {\n          mode: isDark ? \"dark\" : \"light\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          labels: {\n            format: \"dd MMM\",\n            style: {\n              colors: theme.textColor\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: theme.textColor\n          },\n          axisTicks: {\n            show: true,\n            color: theme.textColor\n          }\n        },\n        yaxis: {\n          labels: {\n            style: {\n              colors: theme.textColor\n            },\n            formatter: function (val) {\n              return val.toFixed(3);\n            }\n          },\n          axisBorder: {\n            show: true,\n            color: theme.textColor\n          },\n          axisTicks: {\n            show: true,\n            color: theme.textColor\n          }\n        },\n        plotOptions: {\n          candlestick: {\n            colors: {\n              upward: '#ac0710',\n              downward: '#125aac'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"bleqMRtH3XPEhT+q+Wl7SrTbIX4=\", false, function () {\n  return [useRecoilValue, useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","isDarkAtom","useRecoilValue","darkTheme","lightTheme","jsxDEV","_jsxDEV","Chart","coinId","_s","isDark","theme","isLoading","data","children","type","series","name","Array","isArray","map","price","x","Date","time_open","y","parseFloat","open","high","low","close","options","mode","chart","height","width","toolbar","show","background","grid","xaxis","labels","format","style","colors","textColor","axisBorder","color","axisTicks","yaxis","formatter","val","toFixed","plotOptions","candlestick","upward","downward","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/june2/Desktop/workspace/new-coin/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { isDarkAtom } from \"./atoms\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { darkTheme, lightTheme } from \"../theme\";\r\n\r\ninterface IHistorical {\r\n  time_open: number;\r\n  open: string;\r\n  high: string;\r\n  low: string;\r\n  close: string;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const theme = isDark ? darkTheme : lightTheme; // 현재 테마를 선택합니다.\r\n\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: Array.isArray(data)\r\n                ? data.map((price) => ({\r\n                    x: new Date(price.time_open * 1000),\r\n                    y: [\r\n                      parseFloat(price.open),\r\n                      parseFloat(price.high),\r\n                      parseFloat(price.low),\r\n                      parseFloat(price.close),\r\n                    ],\r\n                  }))\r\n                : [],\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n              labels: {\r\n                format: \"dd MMM\",\r\n                style: {\r\n                  colors: theme.textColor,\r\n                },\r\n              },\r\n              axisBorder: {\r\n                show: true,\r\n                color: theme.textColor,\r\n              },\r\n              axisTicks: {\r\n                show: true,\r\n                color: theme.textColor,\r\n              },\r\n            },\r\n            yaxis: {\r\n              labels: {\r\n                style: {\r\n                  colors: theme.textColor,\r\n                },\r\n                formatter: function (val) {\r\n                  return val.toFixed(3);\r\n                },\r\n              },\r\n              axisBorder: {\r\n                show: true,\r\n                color: theme.textColor,\r\n              },\r\n              axisTicks: {\r\n                show: true,\r\n                color: theme.textColor,\r\n              },\r\n            },\r\n            plotOptions: {\r\n              candlestick: {\r\n                colors: {\r\n                  upward: '#ac0710',\r\n                  downward: '#125aac',\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}