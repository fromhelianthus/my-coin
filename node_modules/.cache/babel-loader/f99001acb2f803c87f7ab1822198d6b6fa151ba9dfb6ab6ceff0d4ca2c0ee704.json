{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\june2\\\\Desktop\\\\workspace\\\\new-coin\\\\src\\\\routes\\\\Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart({\n  coinId\n}) {\n  _s();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"line\",\n      series: [{\n        name: \"Price\",\n        data: Array.isArray(data) ? data.map(price => parseFloat(price.close)) : []\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","jsxDEV","_jsxDEV","Chart","coinId","_s","isLoading","data","children","type","series","name","Array","isArray","map","price","parseFloat","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/june2/Desktop/workspace/new-coin/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: string;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: Array.isArray(data) ? data.map((price) => parseFloat(price.close)) : []\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAezC,SAASC,KAAKA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAgB,CAAC,OAAO,EAAEM,MAAM,CAAC,EAAE,MACrEL,gBAAgB,CAACK,MAAM,CACzB,CAAC;EACD,oBACEF,OAAA;IAAAM,QAAA,EACGF,SAAS,GACR,kBAAkB,gBAElBJ,OAAA,CAACF,SAAS;MACRS,IAAI,EAAC,MAAM;MACXC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,OAAO;QACbJ,IAAI,EAAEK,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,GAAGA,IAAI,CAACO,GAAG,CAAEC,KAAK,IAAKC,UAAU,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC,GAAG;MAC7E,CAAC,CACD;MACFC,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,KAAK,EAAE;UACLC,MAAM,EAAE,GAAG;UACXC,KAAK,EAAE,GAAG;UACVC,OAAO,EAAE;YACPC,IAAI,EAAE;UACR,CAAC;UACDC,UAAU,EAAE;QACd,CAAC;QACDC,IAAI,EAAE;UAAEF,IAAI,EAAE;QAAM,CAAC;QACrBG,MAAM,EAAE;UACNC,KAAK,EAAE,QAAQ;UACfN,KAAK,EAAE;QACT,CAAC;QACDO,KAAK,EAAE;UACLL,IAAI,EAAE;QACR,CAAC;QACDM,KAAK,EAAE;UACLC,UAAU,EAAE;YAAEP,IAAI,EAAE;UAAM,CAAC;UAC3BQ,SAAS,EAAE;YAAER,IAAI,EAAE;UAAM,CAAC;UAC1BS,MAAM,EAAE;YAAET,IAAI,EAAE;UAAM;QACxB;MACF;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CA/CQF,KAAK;EAAA,QACgBL,QAAQ;AAAA;AAAAyC,EAAA,GAD7BpC,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}